20190406
今日bug:
	I.找不到或无法加载主类：需要主类名和文件名一致(?)
	II.在应用程序类路径中找到类(?)(已经编译出class文件，运行时不可以加后缀直接运行就OK了)
1.java进制转换
	Integer.toBinaryString();//二进制
	Integer.toOctalStirng();//十进制
	Integer.toHexString();//十六进制
2.数组的排序
	(1)选择排序(大圈套小圈)
		for(int x=0;x<arr.length-1;x++){
			for(inty=x+1;y<arr.length;y++){
				if(arr[x]>arr[y]){
					int temp=arr[x];
					arr[x]=arr[y];
					arr[y]=temp;
				}
			}
		}
	(2)冒泡排序
		0-1 1-2 2-3 3-4 4-5 ……
		0-1 1-2 2-3 3-4 ……
		0-1 1-2 2-3 ……
		0-1 1-2 ……
		0-1 ……
		for(int x=0;x<arr.length-1;x++){
			for(int y=0;y<arr.length-1-x;y++){
				if(arr[y]>arr[y+1]){
					int temp=arr[y];
					arr[y]=arr[y+1];
					arr[y+1]=temp;
				}
			}
		}
3.重复代码单独封装
4.数组的查找
	(1)普通（遍历）查找方法:无序数组
		数组中查找，找到时返回相应的角标，如查找不到则返回-1（表示所查找的不存在）
		//查找一个元素在数组中第一次出现的位置
			for(int x=0;x<arr.length;x++){
				if(arr[x]==key)
				return x;
			}
			return -1;//代表找不到的情况
	(2)二分法(binarySearch)查找：前提数组必须是有序的
		/*思路：
			I.通过角标先获取中间角标上元素
			II.让该元素和要找的数据比较
			III.如果要找的数打了就缩小范围，要找的范围应该是中间的角标+1——尾角标
			IIII.不断重复直至找到所需的值对应的角标*/
			int max,min,mid;
			min=0;
			max=arr.length-1;
			mid=(max+min)>>1;//右移一位相当于除以二
			while(arr[mid]!=key){
				if(key>arr[mid])
					min=mid+1;
				else if(key<arr[mid])
					max=mid-1;
				if(max<min)
					return -1;
				mid=(max+min)>>1;
			}
			return mid;
		/*另一种判断方式*/
			while(min<=max){
				mid=(min+max)>>1;
				if(key>arr[mid])
					min=mid+1;
				else if(key<arr[mid])
					max=mid-1;
				else
					return mid;
				}
			return -1;
5.二维数组
	(1)内存
	(2)基本使用
		int[][] arr=new int[] [];
		int[][] arr={{23,17,11}{88},{10,5,999,63}};
6.往有序的数组中插入一个元素并继续保证有序，问如何获取该位置:Arrays.binarySearch(arr,13);
7.面向对象（封装、继承、多态）
	(1)面向过程：大象装进冰箱里（过程、行为的思考方式），重点是大象
	(2)面向对象：将同一类的功能封装，重点是冰箱，解决问题先找对象
class Phone{
	call();
	sendMessage();
}
//学生
class Student{
	学习();
}
//教室
class Room{
	Student(元素类型）[] Students=new Student[50];getStudent(index);setStudent(Student);};
}
8.类与对象的关系（属性、行为）
	类：用于描述事物的		对象：该类事物具体的个体
	汽车{
		轮胎数；
		颜色；
		运行();
	}
	lass Car{
		int num;//java为强类型语言
		String color;
		void run(){};
	}
	立实体（对象）：new关键字，数据类型 变量名=初始化值；
9.对象的内存体现
	I.定义在方法中的变量都为局部变量
	II.堆:num=0;color=null;
	   栈:main c1(创建时指向堆中新创立的Car类的首地址,更改其在堆中个的值) c2(创建时指向堆中新创立的另一个Car类的首地址,更改其在堆中个的值)
10.参数传递(类也是一种参数)
11.匿名对象:没有名字的对象，为对象的简化定义方式，可作为实际参数进行传递，如对象对方法只进行一次调用可简化为匿名对象的形式
	Car c=new car();
	c.run();
	简化为：new Car().run();
	注意：new Car().run()
		  new Car().run()为对两个对象进行了两次调用(错误)
		  c.run()
		  c.run()为对一个对象进行两次调用(正确)
		  所以匿名对象使用时必须只对方法进行一次调用时再使用！！！！！
12.成员变量和局部变量的区别
	(1)源代码中定义的位置不同
		成员变量定义在类中；
		局部变量定义在方法中（只要类的下一级大括号都是局部的）；
	(2)内存中存储位置不同
		成员变量存储在堆内存的对象中；
		局部变量存储在栈内存的方法中；
	(3)生命周期不同
		成员变量随着对象的出现而出现；
		局部变量随着所属区间的运行出现，随着所属区间的结束而释放；
13.面向对象（封装、继承、多态）的详细解释
	(1)封装：隐藏实现细节，对外提供公共的访问方式（接口）
	   私有权限修饰符private：降低访问权限
			 对私有数据可以通过方法的方式对其进行访问，相当于增加一道安检工序，并且可以抛出异常throw new RuntimeException
		封装的优点：提高安全性，不允许直接访问细节并提供公共访问方式，实现可控；
					提高易用性；
					提高复用性；
					隔离的变化；





































