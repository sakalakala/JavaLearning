20190408
1.构造代码块：给所有对象进行初始化（所有对象共性的东西可以抽到构造代码块中）
  构造函数：只给对应对象初始化
  内存（I——III均为隐式）：
	I.super()//调用父类构造函数
	II.显示初始化
	III.构造代码块初始化
2.创建一个对象的初始化流程
	(1)加载指定的字节码文件进内存；
	(2)通过new在堆内存中开辟空间，分配首地址值；
	(3)对对象中的属性进行默认初始化；
	(4)调用与之对应的构造函数，构造函数压栈；
	(5)构造函数中 的执行隐式语句super()访问父类中的构造函数；
	(6)对属性进行显示初始化；
	(7)调用类中的构造代码块；
	(8)执行构造函数中自定义的初始化代码；
	(9)初始化完毕，将地址赋值给指定的引用；
3.局部代码块：控制局部变量的生命周期
4.设计模式：解决某一种问题的一种思想
	面向对象的语言，23种模式通用
5.单例设计模式
	(1)思想：保证一个类的对象在内存中的唯一性；
	(2)应用场景：例如对于配置文件(ConfigFile)：存储了特定的数据文件，不止一个程序调用配置文件创建配置文件对象
	   当程序A、B操作的配置文件对象是同一个，即若是希望对程序A创造的配置文件对象的操作完同步到程序B创造的配置文件对象上使B可以基于A操作后的结果进行操作；
			思路：I.问题是其他程序都可以通过new创建该类对象，无法控制被创建的对象的数量————不让其他程序new；
				  II.但此时其他程序无对象，干脆在本类中自己new一个本类对象，以完成对数量的控制；
				  III.对外提供让其他程序获取该对象的方式；
	(3)步骤：
		I.不让其他程序new该类对象————将类中的构造函数私有化；
		II.在本类中new一个对象；
		III.定义一个方法返回该对象；
	(4)代码体现；
		I.在静态方法区建立一个对象s，指向堆中的一个对象，这样这个对象就是静态的了;
		II.主函数创建对象时类内返回函数进栈，将静态方法区的对象的值赋给主函数创建的实例s1、2、……；
	(5)代码细节：可以不要写方法直接调用s，但是有返回函数可以有助于判断是否返回
	(6)单例的另一种表现形式——延迟加载方式（上来不new对象，调用方法时再new）——懒汉与饿汉
	(7)应用
6.继承(extends)
	(1)概述、特点，
		关键字extends
		提高代码复用性；类与类产生关系，多态前提；
		JAVA支持单继承（一个类只能有一个父类），不支持多继承（一个类可以有多个父类）；
		多层次继承时，学习继承体系先看顶层了解基本功能，使用时找体系最下面的对象；
		什么时候定义继承？当事物之间存在着所属（is a ）关系是，可以通过继承来体现这个关系（XXX是YYY中的一种，则XXX extends YYY）
		细节：对于父类中私有部分，子类对象是无法直接访问的，但是有这个私有的成分；
	(2)成员变量的代码特点：
		super()访问父的构造函数，然后显示初始化（此时父类进栈），父类也有爹（object）;
		当局部变量和成员变量同名时，用this区分，子父类中出现同名成员变量用关键字super区分;
		this：代表本类对象的引用
		super：代表父类的那片空间
		
		
		
		