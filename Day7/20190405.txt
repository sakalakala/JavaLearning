20190405
1.今日bug：
	I.保存的直接为java文件，所以javac编译出错（？）
	II.无法从静态上下文中引用非静态方法（前面需要一致？）
	III.运用Notepad编写时遇到中文控制台输出均为乱码（编码改为以ANSI格式编码即可，但已经写下的注释全部变成乱码了- -，从明天开始重新写吧今天就先这样了要记得改编码方式）
2.函数（方法）的定义	
	(1)用途：定义一个功能
	(2)格式
		修饰符 返回值类型 函数名（参数类型 形参1.参数类型 形参2……）{
		执行语句；
		return 返回值；//可直接结束函数功能并将后面的具体结构返回给调用者（必须），除非返回值类型为void则可以省略
		}
	(3)功能（结果、未知内容）
	(4)写哪都可以但都先执行主函数
	注意：千万千万不要写多余的功能，只定义所需的功能，且控制在20行之内！！！！！！！！！
3.函数的重载(overload)
	(1)函数名：描述功能
	(2)函数同名时参数列表（参数个数/参数类型）不一样也可以编译，根据参数列表匹配相应的函数（开发时功能一样时起一样的名，使用不同的参数进行调用）
4.函数的内存（栈）调用过程
	main方法→主语句1→调用方法1
	                     ↑
					方法调用进入（压栈）运算返回，之后释放内存（弹栈）
5.数组：存储多个数据并从0开始编号（索引）
	(1)格式(n为数组长度),java中只能放同样的数据结构的值
		I.int[] arr = new int[n];//new关键字创建数组实体arr，arr为数组类型的变量
		II.int[] arr = new int[]{3,4,5};
		III.int[] arr ={3,4,5};
	(2)数组的内存格式（栈&堆）
		I.划分一块给java运行
		II.java内部继续划分出5个部分（栈、堆、方法区、本地方法区（操作系统）、寄存器（cpu））
			栈内存：存储的都是局部变量，只要在方法中定义的变量都是局部变量。一旦变量的生命周期结束则该变量就被释放。
			堆内存：存储都是实体（对象），每一个实体都有一个首地址值，且均带着索引（编号）。堆内存中的变量都有默认的初始化值，不同类型不一样（int-0,double-0.0,bool-false,char-'\u0000')
		传递时将栈按照地址指向堆，则指向了堆中的一个实体，如不希望将引用型变量指向实体，则使用null，实体不再使用时就会被垃圾回收机制处理。
		注：arr[]=xxx[]指将arr指向xxx[]的首元素
	(3)一些问题：
		I.ArrayIndexOutofBoundsException：n		数组角标n没找到会发生该异常
		II.NullPointerException		空指针异常，当使用没有任何实体指向的引用变量操作实体时运行会发生该异常
	(4)获取数组长度
		数组名.length
	(5)数组的使用
		I.容器，固定长度，元素都有索引
		II.使用时机：数据多，个数确定且有对应关系（需求中是否有对应的有序编号？需求中的数据是否需要有序的编号？）
			查表法：数据之间存在对应关系，通过一方查询另一方，当对应关系存在但无一方有有序编号时使用map
			 
		
			